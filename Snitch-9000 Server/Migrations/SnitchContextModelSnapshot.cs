// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using snitch_9000.Data;

#nullable disable

namespace snitch_9000.Migrations
{
    [DbContext(typeof(SnitchContext))]
    partial class SnitchContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.8");

            modelBuilder.Entity("CourseQuestion", b =>
                {
                    b.Property<string>("coursescourse_id")
                        .HasColumnType("TEXT");

                    b.Property<int>("question_id")
                        .HasColumnType("INTEGER");

                    b.HasKey("coursescourse_id", "question_id");

                    b.HasIndex("question_id");

                    b.ToTable("CourseQuestion");
                });

            modelBuilder.Entity("CourseUser", b =>
                {
                    b.Property<string>("coursescourse_id")
                        .HasColumnType("TEXT");

                    b.Property<int>("user_id")
                        .HasColumnType("INTEGER");

                    b.HasKey("coursescourse_id", "user_id");

                    b.HasIndex("user_id");

                    b.ToTable("CourseUser");
                });

            modelBuilder.Entity("snitch_9000.Models.Course", b =>
                {
                    b.Property<string>("course_id")
                        .HasColumnType("TEXT");

                    b.HasKey("course_id");

                    b.ToTable("COURSES");
                });

            modelBuilder.Entity("snitch_9000.Models.Hit", b =>
                {
                    b.Property<int>("hit_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("link")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("question_id")
                        .HasColumnType("INTEGER");

                    b.HasKey("hit_id");

                    b.HasIndex("question_id");

                    b.ToTable("HITS");
                });

            modelBuilder.Entity("snitch_9000.Models.Notification", b =>
                {
                    b.Property<int>("notification_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("hit_id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("question_id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("user_id")
                        .HasColumnType("INTEGER");

                    b.HasKey("notification_id");

                    b.HasIndex("hit_id");

                    b.HasIndex("question_id");

                    b.HasIndex("user_id");

                    b.ToTable("NOTIFICATIONS");
                });

            modelBuilder.Entity("snitch_9000.Models.Question", b =>
                {
                    b.Property<int>("question_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("content")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("keywords")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("start_date")
                        .HasColumnType("TEXT");

                    b.Property<string>("tags")
                        .HasColumnType("TEXT");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("user_id")
                        .HasColumnType("INTEGER");

                    b.HasKey("question_id");

                    b.HasIndex("user_id");

                    b.ToTable("QUESTIONS");
                });

            modelBuilder.Entity("snitch_9000.Models.User", b =>
                {
                    b.Property<int>("user_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("user_id");

                    b.ToTable("USERS");
                });

            modelBuilder.Entity("CourseQuestion", b =>
                {
                    b.HasOne("snitch_9000.Models.Course", null)
                        .WithMany()
                        .HasForeignKey("coursescourse_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("snitch_9000.Models.Question", null)
                        .WithMany()
                        .HasForeignKey("question_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CourseUser", b =>
                {
                    b.HasOne("snitch_9000.Models.Course", null)
                        .WithMany()
                        .HasForeignKey("coursescourse_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("snitch_9000.Models.User", null)
                        .WithMany()
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("snitch_9000.Models.Hit", b =>
                {
                    b.HasOne("snitch_9000.Models.Question", "question")
                        .WithMany()
                        .HasForeignKey("question_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("question");
                });

            modelBuilder.Entity("snitch_9000.Models.Notification", b =>
                {
                    b.HasOne("snitch_9000.Models.Hit", "hit")
                        .WithMany()
                        .HasForeignKey("hit_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("snitch_9000.Models.Question", "question")
                        .WithMany()
                        .HasForeignKey("question_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("snitch_9000.Models.User", "user")
                        .WithMany()
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("hit");

                    b.Navigation("question");

                    b.Navigation("user");
                });

            modelBuilder.Entity("snitch_9000.Models.Question", b =>
                {
                    b.HasOne("snitch_9000.Models.User", "user")
                        .WithMany()
                        .HasForeignKey("user_id");

                    b.Navigation("user");
                });
#pragma warning restore 612, 618
        }
    }
}
